{"version":3,"sources":["../../src/libs/broker.js"],"names":["emoji","output","rSign","replace","sign","match","emojiCode","builtIn","method","targetOutput","Object","keys","variables","forEach","varName","value","RegExp","tinter","options"],"mappings":"utBAMA;AAEA;;;;EAOO,GAAMA,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,GAAgB,IAAbC,CAAAA,CAAa,GAAbA,MAAa,CAC7BC,CAAK,CAAG,gBADqB,CAGnC,MAAOD,CAAAA,CAAM,CAACE,OAAP,CAAeD,CAAf,CAAsB,SAACE,CAAD,CAAOC,CAAP,CAA0B,CACrD,MAAOC,mBAAUD,CAAV,GAAoBD,CAC5B,CAFM,CAGR,CANM,C,oBASA,GAAMG,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,GAAwB,IAArBN,CAAAA,CAAqB,GAArBA,MAAqB,CAAbO,CAAa,GAAbA,MAAa,CACzCC,CAAY,CAAGR,CAD0B,CAY7C,MATAS,CAAAA,MAAM,CAACC,IAAP,CAAYC,SAAZ,EAAuBC,OAAvB,CAA+B,SAACC,CAAD,CAAW,CACxC,GAAIC,CAAAA,CAAK,CAAGH,SAAS,CAACE,CAAD,CAArB,CAEAC,CAAK,CAAoB,UAAjB,QAAOA,CAAAA,CAAP,CAA8BA,CAAK,EAAnC,CAAwCA,CAHR,CAKxCN,CAAY,CAAGA,CAAY,CAACN,OAAb,CAAqB,GAAIa,CAAAA,MAAJ,YAAeF,CAAf,EAA0B,GAA1B,CAArB,CAAqDC,CAArD,CAChB,CAND,CASA,CAAON,CAAY,CAACN,OAAb,CAAqB,SAArB,CAAgCK,CAAhC,CACR,CAbM,CAiBP,U,wBACO,GAAMS,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,GAAiC,IAA9BhB,CAAAA,CAA8B,GAA9BA,MAA8B,CAAtBO,CAAsB,GAAtBA,MAAsB,CAAdU,CAAc,GAAdA,OAAc,CAGrD,MAFmBjB,CAAAA,CAGpB,CAJM,C","sourcesContent":["import * as util from 'util';\nimport * as colors from 'ansi-colors';\n\nimport * as variables from './variables';\nimport emojiCode from './emoji';\n\n// console.log(colors.styles);\n\n/*\nexport const namespace = ({ output, method, options }) => {\n\n}\n*/\n\n\nexport const emoji = ({ output }) => {\n  const rSign = /\\:i\\-([a-z]+)/g;\n\n  return output.replace(rSign, (sign, match, ...argv) => {\n    return emojiCode[match] || sign;\n  });\n};\n\n\nexport const builtIn = ({ output, method }) => {\n  let targetOutput = output;\n\n  Object.keys(variables).forEach((varName)=>{\n    let value = variables[varName];\n\n    value = typeof value === 'function' ? value() : value;\n\n    targetOutput = targetOutput.replace(new RegExp(`:${varName}`, 'g'), value);\n  });\n\n\n  return targetOutput.replace(':method', method);\n};\n\n\n\n/* 输出着色 */\nexport const tinter = ({ output, method, options }) => {\n  let targetOutput = output;\n\n  return targetOutput;\n};\n\n"],"file":"broker.js"}