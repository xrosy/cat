{"version":3,"sources":["../src/logger.js"],"names":["__CustomizeColorConf","info","color","cyan","log","warning","yellow","error","red","success","green","dark","dim","gray","disabled","em","italic","heading","bold","underline","muted","primary","blue","strong","stdout","process","write","util","format","apply","arguments","theme","Cat","console","Object","keys","forEach","method","prototype","str"],"mappings":"8YAIMA,CAAAA,oBAAoB,CAAG,CAC3BC,IAAI,CAAOC,uBAAMC,IADU,CAE3BC,GAAG,CAAQF,uBAAMC,IAFU,CAG3BE,OAAO,CAAIH,uBAAMI,MAHU,CAI3BC,KAAK,CAAML,uBAAMM,GAJU,CAK3BC,OAAO,CAAIP,uBAAMQ,KALU,CAM3BC,IAAI,CAAOT,uBAAMU,GAAN,CAAUC,IANM,CAQ3BC,QAAQ,CAAGZ,uBAAMW,IARU,CAS3BE,EAAE,CAASb,uBAAMc,MATU,CAU3BC,OAAO,CAAIf,uBAAMgB,IAAN,CAAWC,SAVK,CAW3BC,KAAK,CAAMlB,uBAAMU,GAXU,CAY3BS,OAAO,CAAInB,uBAAMoB,IAZU,CAa3BC,MAAM,CAAKrB,uBAAMgB,IAbU,CAc3BC,SAAS,CAAEjB,uBAAMiB,SAdU,C,CAiBvBK,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAY,CACzB;AACAC,OAAO,CAACD,MAAR,CAAeE,KAAf,CAAqBC,iBAAKC,MAAL,CAAYC,KAAZ,CAAkB,IAAlB,CAAwBC,SAAxB,EAAqC,IAA1D,CACD,C,CAGD5B,uBAAM6B,KAAN,CAAY/B,oBAAZ,C,IAGMgC,CAAAA,G,CACJ,cAAc,2BACZC,OAAO,CAAC7B,GAAR,CAAY,eAAZ,CADY,CAGZ8B,MAAM,CAACC,IAAP,CAAYnC,oBAAZ,EAAkCoC,OAAlC,CAA0C,SAACC,CAAD,CAAU,CAClDL,GAAG,CAACM,SAAJ,CAAcD,CAAd,EAAwB,UAAa,CACnC,GAAME,CAAAA,CAAG,CAAGrC,uBAAMmC,CAAN,EAAcV,iBAAKC,MAAL,kCAAd,EAAsC,IAAlD,CACAH,OAAO,CAACD,MAAR,CAAeE,KAAf,CAAqBa,CAArB,CACD,CACF,CALD,CAMD,C,8BAKY,GAAIP,CAAAA,G","sourcesContent":["import util from 'util';\nimport color from 'ansi-colors'\n\n\nconst __CustomizeColorConf = {\n  info     : color.cyan,\n  log      : color.cyan,\n  warning  : color.yellow,\n  error    : color.red,\n  success  : color.green,\n  dark     : color.dim.gray,\n\n  disabled : color.gray,\n  em       : color.italic,\n  heading  : color.bold.underline,\n  muted    : color.dim,\n  primary  : color.blue,\n  strong   : color.bold,\n  underline: color.underline,\n};\n\nconst stdout = function () {\n  // util.format.apply(this, arguments)\n  process.stdout.write(util.format.apply(this, arguments) + '\\r');\n};\n\n\ncolor.theme(__CustomizeColorConf);\n\n\nclass Cat {\n  constructor() {\n    console.log('CONSTRUCTOR>>');\n\n    Object.keys(__CustomizeColorConf).forEach((method)=>{\n      Cat.prototype[method] = (...argv) => {\n        const str = color[method](util.format(...argv)) + '\\n';\n        process.stdout.write(str);\n      }\n    });\n  }\n}\n\nexport { Cat };\n\nexport default new Cat();"],"file":"logger.js"}